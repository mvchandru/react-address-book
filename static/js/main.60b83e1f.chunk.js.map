{"version":3,"sources":["components/molecules/DeleteConfirmation/styles.module.scss","components/organisms/EditContact/styles.module.scss","components/organisms/ViewContact/styles.module.scss","components/molecules/SlideOut/styles.module.scss","components/organisms/NewContact/styles.module.scss","components/molecules/Header/styles.module.scss","components/atoms/InputText/styles.module.scss","components/atoms/InputSelect/styles.module.scss","components/atoms/Button/styles.module.scss","components/atoms/Message/styles.module.scss","components/atoms/SearchBox/styles.module.scss","components/atoms/CancelIcon/styles.module.scss","components/atoms/AddIcon/styles.module.scss","components/atoms/DeleteIcon/styles.module.scss","components/atoms/EditIcon/styles.module.scss","components/organisms/AllContacts/styles.module.scss","components/atoms/MaterialIcon/index.js","utils/constants.js","redux/users/types.js","redux/users/action.js","components/molecules/SlideOut/index.js","components/atoms/InputText/index.js","components/atoms/InputSelect/index.js","components/atoms/Button/index.js","components/molecules/ContactForm/index.js","components/atoms/CancelIcon/index.js","utils/validations.js","utils/helpers.js","components/organisms/NewContact/index.js","components/atoms/AddIcon/index.js","components/molecules/Header/index.js","components/atoms/Loader/index.js","components/atoms/Message/index.js","components/molecules/DeleteConfirmation/index.js","components/atoms/DeleteIcon/index.js","components/organisms/EditContact/index.js","components/atoms/EditIcon/index.js","components/organisms/ViewContact/index.js","components/atoms/SearchBox/index.js","components/organisms/AllContacts/index.js","pages/AddressBook/index.js","App.js","redux/page/types.js","redux/page/reducer.js","redux/users/reducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","MaterialIcon","name","color","onClick","props","className","apiUrl","users","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","SET_SELECTED_USER","ADD_USER","UPDATE_USER","DELETE_USER","fetchUsers","dispatch","type","usersType","axios","get","then","response","data","results","Array","isArray","length","map","user","index","sort","a","b","first","payload","fetchUsersSuccess","catch","error","errorMessage","message","SlideOut","toggleContactForm","children","classes","slideout","overlay","slideoutContainer","InputText","fieldType","fieldDisplayName","fieldName","formik","isDisabled","fieldControl","htmlFor","id","disabled","getFieldProps","errors","validation","InputSelect","options","option","value","label","ButtonStyle","Button","style","button","FormType","ContactForm","formType","onSubmit","handleSubmit","CancelIcon","cancelIcon","validate","values","firstName","lastName","phone","toString","email","test","formatPhoneNumber","substr","getFormattedUserObject","last","title","Date","getTime","NewContact","useDispatch","useFormik","initialValues","newUser","newContact","section","AddIcon","useState","isContactShown","setIsContactShown","toggleContactNewForm","prev","addIcon","Header","pageTitle","useSelector","state","page","header","Loader","MessageStyle","Message","DeleteAction","DeleteConfirmation","deleteContact","deleteConfirmation","content","buttonSection","DeleteIcon","userId","isDeleteConfirmationShown","setIsDeleteConfirmationShown","deleteIcon","action","EditContact","toggleContactEditForm","selectedUser","find","replace","updatedUser","updateUser","editContact","icons","EditIcon","editIcon","ViewContact","viewContact","SearchBox","onSearch","searchBox","placeholder","onChange","e","target","searchIcon","AllContacts","usersList","setUsersList","useEffect","setSelectedUser","allContacts","count","searchTerm","toLowerCase","filter","includes","getFilteredUsers","heading","selected","hideOnMobile","AddressBook","isLoading","isError","App","SET_PAGE_TITLE","initialState","pageReducer","pageType","usersReducer","usersArrayAfterAdd","findIndex","usersArrayAfterEdit","usersArrayAfterDelete","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60b83e1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteConfirmation\":\"styles_deleteConfirmation__gGbCx\",\"overlay\":\"styles_overlay__3mXXZ\",\"content\":\"styles_content__2B0_v\",\"title\":\"styles_title__1f1p_\",\"buttonSection\":\"styles_buttonSection__17fD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editContact\":\"styles_editContact__3C2k2\",\"section\":\"styles_section__1heDZ\",\"title\":\"styles_title__1opL4\",\"icons\":\"styles_icons__2XVwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewContact\":\"styles_viewContact__3XNVP\",\"section\":\"styles_section__2z97N\",\"title\":\"styles_title__2I07h\",\"icons\":\"styles_icons__3YIiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slideout\":\"styles_slideout__2BsHW\",\"overlay\":\"styles_overlay__E9h1p\",\"slideoutContainer\":\"styles_slideoutContainer__1wK0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContact\":\"styles_newContact__wCAq9\",\"section\":\"styles_section___IzAy\",\"title\":\"styles_title__2GOr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3GEh2\",\"title\":\"styles_title__3CObc\",\"addIcon\":\"styles_addIcon__1-BJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldControl\":\"styles_fieldControl__2Cspi\",\"validation\":\"styles_validation__2Ee5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldControl\":\"styles_fieldControl__1aEo8\",\"validation\":\"styles_validation__1cHE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1Y0gX\",\"primary\":\"styles_primary__32iiB\",\"secondary\":\"styles_secondary__2Vh4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"styles_message__3vV43\",\"error\":\"styles_error__2tseA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"styles_searchBox__J_a-S\",\"searchIcon\":\"styles_searchIcon__2ABui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancelIcon\":\"styles_cancelIcon__315qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addIcon\":\"styles_addIcon__kN0Xh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteIcon\":\"styles_deleteIcon__1Ywic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editIcon\":\"styles_editIcon__21fRl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContacts\":\"styles_allContacts__yh_2n\",\"section\":\"styles_section__35igu\",\"count\":\"styles_count__1LTi2\",\"heading\":\"styles_heading__3r8iE\",\"data\":\"styles_data__1Km3j\",\"selected\":\"styles_selected__ouziB\",\"name\":\"styles_name__4t7Jh\",\"phone\":\"styles_phone__2minA\",\"hideOnMobile\":\"styles_hideOnMobile__Cmuer\"};","import \"./styles.scss\";\r\n\r\nconst MaterialIcon = ({ name, color, onClick, ...props }) => {\r\n  return (\r\n    <span\r\n      className={`icons material-icons ${color ? color : \"\"}`}\r\n      data-testid={props[\"data-testid\"]}\r\n      onClick={onClick}\r\n    >\r\n      {name}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default MaterialIcon;\r\n","// ***********************************\r\n// API Endpoint\r\n// ***********************************\r\n\r\nconst usersLimit = 25;\r\nconst nationality = \"nl\";\r\nconst fields = \"name,email,phone,id\";\r\nexport const apiUrl = {\r\n  users: `https://randomuser.me/api/?results=${usersLimit}&nat=${nationality}&inc=${fields}`,\r\n};\r\n","export const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const SET_SELECTED_USER = \"SET_SELECTED_USER\";\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\n","import axios from \"axios\";\r\nimport { apiUrl } from \"./../../utils/constants\";\r\nimport * as usersType from \"./types\";\r\n\r\nconst fetchUsersRequest = () => {\r\n  return {\r\n    type: usersType.GET_USERS_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchUsersSuccess = (data) => {\r\n  return {\r\n    type: usersType.GET_USERS_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst fetchUsersFailure = (data) => {\r\n  return {\r\n    type: usersType.GET_USERS_FAILURE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchUsers = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUsersRequest());\r\n    axios\r\n      .get(apiUrl.users)\r\n      .then((response) => {\r\n        const data = response.data.results;\r\n        let users = [];\r\n        if (data && Array.isArray(data) && data.length > 0) {\r\n          users = data\r\n            .map((user, index) => {\r\n              return {\r\n                ...user,\r\n                type: index % 2 === 0 ? \"Work\" : \"Private\",\r\n              };\r\n            })\r\n            .sort((a, b) => (a.name.first > b.name.first ? 1 : -1));\r\n        }\r\n        dispatch(fetchUsersSuccess(users));\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        dispatch(fetchUsersFailure(errorMessage));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setSelectedUser = (id) => {\r\n  return {\r\n    type: usersType.SET_SELECTED_USER,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const updateUser = (user, id) => {\r\n  return {\r\n    type: usersType.UPDATE_USER,\r\n    payload: {\r\n      user,\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addUser = (user) => {\r\n  return {\r\n    type: usersType.ADD_USER,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const deleteUser = (id) => {\r\n  return {\r\n    type: usersType.DELETE_USER,\r\n    payload: { id },\r\n  };\r\n};\r\n","import classes from \"./styles.module.scss\";\r\n\r\nconst SlideOut = ({ toggleContactForm, children }) => {\r\n  return (\r\n    <div className={classes.slideout}>\r\n      <div\r\n        className={classes.overlay}\r\n        onClick={() => toggleContactForm(\"\")}\r\n      ></div>\r\n      <div className={classes.slideoutContainer}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideOut;\r\n","import classes from \"./styles.module.scss\";\r\n\r\nconst InputText = ({\r\n  fieldType,\r\n  fieldDisplayName,\r\n  fieldName,\r\n  formik,\r\n  isDisabled,\r\n}) => {\r\n  return (\r\n    <div className={classes.fieldControl}>\r\n      <label htmlFor={fieldName}>{fieldDisplayName}</label>\r\n      <input\r\n        type={fieldType}\r\n        id={fieldName}\r\n        disabled={isDisabled}\r\n        {...formik.getFieldProps(fieldName)}\r\n      />\r\n      {formik.errors[fieldName] && (\r\n        <div className={classes.validation}>{formik.errors[fieldName]}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputText;\r\n","import classes from \"./styles.module.scss\";\r\n\r\nconst InputSelect = ({\r\n  fieldType,\r\n  fieldDisplayName,\r\n  fieldName,\r\n  formik,\r\n  isDisabled,\r\n  options,\r\n}) => {\r\n  return (\r\n    <div className={classes.fieldControl}>\r\n      <label htmlFor={fieldName}>{fieldDisplayName}</label>\r\n      <select\r\n        type={fieldType}\r\n        id={fieldName}\r\n        disabled={isDisabled}\r\n        {...formik.getFieldProps(fieldName)}\r\n      >\r\n        {options.map((option) => (\r\n          <option key={option.name} value={option.name}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {formik.errors[fieldName] && (\r\n        <div className={classes.validation}>{formik.errors[fieldName]}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSelect;\r\n","import classes from \"./styles.module.scss\";\r\n\r\nexport const ButtonStyle = {\r\n  Primary: \"primary\",\r\n  Secondary: \"secondary\",\r\n};\r\n\r\nconst Button = ({ style = ButtonStyle.Primary, type, name, onClick }) => (\r\n  <button\r\n    className={`${classes.button} ${classes[style]}`}\r\n    type={type}\r\n    onClick={onClick}\r\n  >\r\n    {name}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import InputText from \"../../atoms/InputText\";\r\nimport InputSelect from \"../../atoms/InputSelect\";\r\nimport Button from \"../../atoms/Button\";\r\n\r\nexport const FormType = {\r\n  New: \"new\",\r\n  Edit: \"edit\",\r\n  View: \"view\",\r\n};\r\n\r\nconst ContactForm = ({ formik, formType }) => {\r\n  const isDisabled = formType === FormType.View;\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <InputText\r\n        fieldDisplayName=\"First Name\"\r\n        fieldName=\"firstName\"\r\n        fieldType=\"text\"\r\n        formik={formik}\r\n        isDisabled={isDisabled}\r\n      />\r\n      <InputText\r\n        fieldDisplayName=\"Last Name\"\r\n        fieldName=\"lastName\"\r\n        fieldType=\"text\"\r\n        formik={formik}\r\n        isDisabled={isDisabled}\r\n      />\r\n      <InputText\r\n        fieldDisplayName=\"Phone\"\r\n        fieldName=\"phone\"\r\n        fieldType=\"number\"\r\n        formik={formik}\r\n        isDisabled={isDisabled}\r\n      />\r\n      <InputText\r\n        fieldDisplayName=\"Email\"\r\n        fieldName=\"email\"\r\n        fieldType=\"email\"\r\n        formik={formik}\r\n        isDisabled={isDisabled}\r\n      />\r\n      <InputSelect\r\n        fieldDisplayName=\"Status\"\r\n        fieldName=\"type\"\r\n        formik={formik}\r\n        isDisabled={isDisabled}\r\n        options={[\r\n          { label: \"Private\", name: \"Private\" },\r\n          { label: \"Work\", name: \"Work\" },\r\n        ]}\r\n      />\r\n      {formType === FormType.New && <Button type=\"submit\" name=\"Add\" />}\r\n      {formType === FormType.Edit && <Button type=\"submit\" name=\"Save\" />}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import MaterialIcon from \"../MaterialIcon\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst CancelIcon = ({ toggleContactForm }) => {\r\n  return (\r\n    <div className={classes.cancelIcon}>\r\n      <MaterialIcon\r\n        data-testid=\"cancel-icon\"\r\n        name=\"clear\"\r\n        onClick={toggleContactForm}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CancelIcon;\r\n","export const validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.firstName) {\r\n    errors.firstName = \"Required\";\r\n  } else if (values.firstName.length > 15) {\r\n    errors.firstName = \"Must be 15 characters or less\";\r\n  }\r\n\r\n  if (!values.lastName) {\r\n    errors.lastName = \"Required\";\r\n  } else if (values.lastName.length > 20) {\r\n    errors.lastName = \"Must be 20 characters or less\";\r\n  }\r\n\r\n  if (!values.phone) {\r\n    errors.phone = \"Required\";\r\n  } else if (values.phone.toString().length !== 10) {\r\n    errors.phone = \"Must be 10 characters\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","const formatPhoneNumber = (value) =>\r\n  `(${value.substr(0, 3)})-${value.substr(3, 3)}-${value.substr(6, 4)}`;\r\n\r\nexport const getFormattedUserObject = (value, user = null) => {\r\n  const { firstName: first, lastName: last, email, phone, type } = value;\r\n  let userObject;\r\n\r\n  if (user) {\r\n    // Edit contact\r\n    userObject = {\r\n      ...user,\r\n      name: {\r\n        ...user.name,\r\n        first,\r\n        last,\r\n      },\r\n      email,\r\n      phone: formatPhoneNumber(phone.toString()),\r\n      type,\r\n    };\r\n  } else {\r\n    // New contact\r\n    userObject = {\r\n      name: {\r\n        title: \"Mr\",\r\n        first,\r\n        last,\r\n      },\r\n      email,\r\n      phone: formatPhoneNumber(phone.toString()),\r\n      id: {\r\n        name: \"BSN\",\r\n        value: new Date().getTime(),\r\n      },\r\n      type,\r\n    };\r\n  }\r\n  return userObject;\r\n};\r\n\r\nexport const getFilteredUsers = (value, users) => {\r\n  const searchTerm = value?.toLowerCase();\r\n  const filteredUsers = users.filter(\r\n    (user) =>\r\n      user.name.first.toLowerCase().includes(searchTerm) ||\r\n      user.name.last.toLowerCase().includes(searchTerm) ||\r\n      user.email.toLowerCase().includes(searchTerm) ||\r\n      user.phone.toString().includes(searchTerm) ||\r\n      user.type.toLowerCase().includes(searchTerm)\r\n  );\r\n  return filteredUsers;\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUser } from \"../../../redux/users/action\";\r\nimport SlideOut from \"../../molecules/SlideOut\";\r\nimport ContactForm, { FormType } from \"../../molecules/ContactForm\";\r\nimport CancelIcon from \"../../atoms/CancelIcon\";\r\nimport { validate } from \"../../../utils/validations\";\r\nimport { getFormattedUserObject } from \"../../../utils/helpers\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst NewContact = ({ toggleContactForm }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      type: \"Private\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      const newUser = getFormattedUserObject(values);\r\n      dispatch(addUser(newUser));\r\n      toggleContactForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"new-contact\">\r\n      <SlideOut toggleContactForm={toggleContactForm}>\r\n        <div className={classes.newContact}>\r\n          <div className={classes.section}>\r\n            <h2 className={classes.title}>New Contact</h2>\r\n            <CancelIcon toggleContactForm={toggleContactForm} />\r\n          </div>\r\n          <ContactForm formik={formik} formType={FormType.New} />\r\n        </div>\r\n      </SlideOut>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewContact;\r\n","import { useState } from \"react\";\r\nimport MaterialIcon from \"../MaterialIcon\";\r\nimport NewContact from \"../../organisms/NewContact\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst AddIcon = () => {\r\n  const [isContactShown, setIsContactShown] = useState(false);\r\n\r\n  const toggleContactNewForm = () => {\r\n    setIsContactShown((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.addIcon}>\r\n      <MaterialIcon\r\n        name=\"person_add\"\r\n        onClick={toggleContactNewForm}\r\n        color=\"white\"\r\n      />\r\n      {isContactShown && (\r\n        <NewContact toggleContactForm={toggleContactNewForm} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddIcon;\r\n","import { useSelector } from \"react-redux\";\r\nimport AddIcon from \"../../atoms/AddIcon\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst Header = () => {\r\n  const { pageTitle } = useSelector((state) => state.page);\r\n\r\n  return (\r\n    <header>\r\n      <div className={classes.header}>\r\n        <h3 className={classes.title}>{pageTitle}</h3>\r\n        <div className={classes.addIcon}>\r\n          <AddIcon />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Loader = () => <p>Loading...</p>\r\n\r\nexport default Loader;","import classes from \"./styles.module.scss\";\r\n\r\nexport const MessageStyle = {\r\n  Information: \"information\",\r\n  Error: \"error\",\r\n  Warning: \"warning\",\r\n};\r\n\r\nconst Message = ({ style = MessageStyle.Information, message }) => (\r\n  <p className={`${classes.message} ${classes[style]}`}>{message}</p>\r\n);\r\n\r\nexport default Message;\r\n","import Button, { ButtonStyle } from \"../../atoms/Button\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nexport const DeleteAction = {\r\n  Cancel: \"cancel\",\r\n  Delete: \"delete\",\r\n};\r\n\r\nconst DeleteConfirmation = ({ deleteContact }) => {\r\n  return (\r\n    <div className={classes.deleteConfirmation} data-testid=\"delete-confirmation\">\r\n      <div className={classes.overlay}></div>\r\n      <div className={classes.content}>\r\n        <div className={classes.title}>Delete this contact?</div>\r\n        <div className={classes.buttonSection}>\r\n          <Button\r\n            style={ButtonStyle.Secondary}\r\n            type=\"button\"\r\n            name=\"Cancel\"\r\n            onClick={() => deleteContact(DeleteAction.Cancel)}\r\n          />\r\n          <Button\r\n            style={ButtonStyle.Primary}\r\n            type=\"button\"\r\n            name=\"Delete\"\r\n            onClick={() => deleteContact(DeleteAction.Delete)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmation;\r\n","import { useState } from \"react\";\r\nimport MaterialIcon from \"../MaterialIcon\";\r\nimport DeleteConfirmation, {\r\n  DeleteAction,\r\n} from \"../../molecules/DeleteConfirmation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteUser } from \"../../../redux/users/action\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst DeleteIcon = ({ userId, toggleContactForm }) => {\r\n  const [isDeleteConfirmationShown, setIsDeleteConfirmationShown] =\r\n    useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteConfirmation = () => {\r\n    setIsDeleteConfirmationShown(true);\r\n  };\r\n\r\n  const deleteContact = (action) => {\r\n    setIsDeleteConfirmationShown(false);\r\n    if (action === DeleteAction.Delete) {\r\n      dispatch(deleteUser(userId));\r\n      toggleContactForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.deleteIcon}>\r\n        <MaterialIcon\r\n          data-testid=\"delete-icon\"\r\n          name=\"delete\"\r\n          onClick={deleteConfirmation}\r\n        />\r\n      </div>\r\n      {isDeleteConfirmationShown && (\r\n        <DeleteConfirmation deleteContact={deleteContact} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteIcon;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { updateUser } from \"../../../redux/users/action\";\r\nimport ContactForm, { FormType } from \"../../molecules/ContactForm\";\r\nimport SlideOut from \"../../molecules/SlideOut\";\r\nimport DeleteIcon from \"../../atoms/DeleteIcon\";\r\nimport CancelIcon from \"../../atoms/CancelIcon\";\r\nimport { validate } from \"../../../utils/validations\";\r\nimport { getFormattedUserObject } from \"../../../utils/helpers\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst EditContact = ({ toggleContactForm, toggleContactEditForm }) => {\r\n  const user = useSelector((state) => {\r\n    const { users, selectedUser } = state.users;\r\n    return users?.find((user) => user.id.value === selectedUser);\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: user?.name.first,\r\n      lastName: user?.name.last,\r\n      phone: user?.phone.replace(/\\D+/g, \"\"),\r\n      email: user?.email,\r\n      type: user?.type,\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      const updatedUser = getFormattedUserObject(values, user);\r\n      dispatch(updateUser(updatedUser, user.id.value));\r\n      toggleContactEditForm();\r\n      toggleContactForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"edit-contact\">\r\n      {user && (\r\n        <SlideOut toggleContactForm={toggleContactForm}>\r\n          <div className={classes.editContact}>\r\n            <div className={classes.section}>\r\n              <h2 className={classes.title}>Edit Contact</h2>\r\n              <div className={classes.icons}>\r\n                <DeleteIcon\r\n                  userId={user.id.value}\r\n                  toggleContactForm={toggleContactForm}\r\n                />\r\n                <CancelIcon toggleContactForm={toggleContactForm} />\r\n              </div>\r\n            </div>\r\n            <ContactForm formik={formik} formType={FormType.Edit} />\r\n          </div>\r\n        </SlideOut>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditContact;\r\n","import { useState } from \"react\";\r\nimport MaterialIcon from \"../MaterialIcon\";\r\nimport EditContact from \"../../organisms/EditContact\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst EditIcon = ({ toggleContactForm }) => {\r\n  const [isContactShown, setIsContactShown] = useState(false);\r\n\r\n  const toggleContactEditForm = () => {\r\n    setIsContactShown((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.editIcon}>\r\n      <MaterialIcon\r\n        data-testid=\"edit-icon\"\r\n        name=\"edit\"\r\n        onClick={toggleContactEditForm}\r\n      />\r\n      {isContactShown && (\r\n        <EditContact\r\n          toggleContactEditForm={toggleContactEditForm}\r\n          toggleContactForm={toggleContactForm}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditIcon;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport SlideOut from \"../../molecules/SlideOut\";\r\nimport ContactForm, { FormType } from \"../../molecules/ContactForm\";\r\nimport EditIcon from \"../../atoms/EditIcon\";\r\nimport DeleteIcon from \"../../atoms/DeleteIcon\";\r\nimport CancelIcon from \"../../atoms/CancelIcon\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst ViewContact = ({ toggleContactForm }) => {\r\n  const user = useSelector((state) => {\r\n    const { users, selectedUser } = state.users;\r\n    return users?.find((user) => user.id.value === selectedUser);\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: user?.name.first,\r\n      lastName: user?.name.last,\r\n      phone: user?.phone.replace(/\\D+/g, \"\"),\r\n      email: user?.email,\r\n      type: user?.type,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"view-contact\">\r\n      {user && (\r\n        <SlideOut toggleContactForm={toggleContactForm}>\r\n          <div className={classes.viewContact}>\r\n            <div className={classes.section}>\r\n              <h2 className={classes.title}>View Contact</h2>\r\n              <div className={classes.icons}>\r\n                <EditIcon toggleContactForm={toggleContactForm} />\r\n                <DeleteIcon\r\n                  userId={user.id.value}\r\n                  toggleContactForm={toggleContactForm}\r\n                />\r\n                <CancelIcon toggleContactForm={toggleContactForm} />\r\n              </div>\r\n            </div>\r\n            <ContactForm formik={formik} formType={FormType.View} />\r\n          </div>\r\n        </SlideOut>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewContact;\r\n","import MaterialIcon from \"../MaterialIcon\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst SearchBox = ({ onSearch }) => {\r\n  return (\r\n    <div className={classes.searchBox}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search contacts\"\r\n        onChange={(e) => onSearch(e.target.value)}\r\n      />\r\n      <div className={classes.searchIcon}>\r\n        <MaterialIcon name=\"search\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedUser } from \"../../../redux/users/action\";\r\nimport ViewContact from \"../ViewContact\";\r\nimport SearchBox from \"../../atoms/SearchBox\";\r\nimport { getFilteredUsers } from \"../../../utils/helpers\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\nconst AllContacts = ({ users }) => {\r\n  const [usersList, setUsersList] = useState(users);\r\n  const [isContactShown, setIsContactShown] = useState(false);\r\n  const { selectedUser } = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => setUsersList(users), [users]);\r\n\r\n  const toggleContactForm = (id) => {\r\n    dispatch(setSelectedUser(id));\r\n    setIsContactShown((prev) => !prev);\r\n  };\r\n\r\n  const filterContacts = (value) => {\r\n    setUsersList(getFilteredUsers(value, users));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.allContacts}>\r\n        <div className={classes.section}>\r\n          <h4 className={classes.count}>{`Contacts (${usersList?.length})`}</h4>\r\n          <SearchBox onSearch={filterContacts} />\r\n        </div>\r\n\r\n        {usersList?.length === 0 ? (\r\n          <p>No contacts to display.</p>\r\n        ) : (\r\n          <>\r\n            <div className={classes.heading}>\r\n              <div>Name</div>\r\n              <div>Phone</div>\r\n              <div>Email</div>\r\n              <div>Status</div>\r\n            </div>\r\n            {usersList?.map(({ name, email, id, phone, type }) => (\r\n              <div\r\n                className={`${classes.data} ${\r\n                  id.value === selectedUser ? classes.selected : \"\"\r\n                }`}\r\n                key={id.value}\r\n                onClick={() => toggleContactForm(id.value)}\r\n              >\r\n                <div className={classes.name}>\r\n                  {name.first} {name.last}\r\n                </div>\r\n                <div className={classes.phone}>{phone}</div>\r\n                <div className={classes.hideOnMobile}>{email}</div>\r\n                <div className={classes.hideOnMobile}>{type}</div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n      {isContactShown && <ViewContact toggleContactForm={toggleContactForm} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllContacts;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchUsers } from \"../../redux/users/action\";\r\nimport Loader from \"../../components/atoms/Loader\";\r\nimport Message, { MessageStyle } from \"../../components/atoms/Message\";\r\nimport AllContacts from \"../../components/organisms/AllContacts\";\r\n\r\nconst AddressBook = () => {\r\n  const { isLoading, users, isError, errorMessage } = useSelector(\r\n    (state) => state.users\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => dispatch(fetchUsers()), []);\r\n\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : isError ? (\r\n    <Message style={MessageStyle.Error} message={errorMessage} />\r\n  ) : (\r\n    <AllContacts users={users} />\r\n  );\r\n};\r\n\r\nexport default AddressBook;\r\n","import \"./App.scss\";\nimport Header from \"./components/molecules/Header\";\nimport AddressBook from \"./pages/AddressBook\";\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <div className=\"container\">\n      <AddressBook />\n    </div>\n  </div>\n);\n\nexport default App;\n","export const SET_PAGE_TITLE = \"SET_PAGE_TITLE\";\r\n","import * as pageType from \"./types\";\r\n\r\nconst initialState = {\r\n  pageTitle: \"Address book\",\r\n};\r\n\r\nconst pageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case pageType.SET_PAGE_TITLE:\r\n      return {\r\n        ...state,\r\n        pageTitle: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pageReducer;\r\n","import * as usersType from \"./types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  users: [],\r\n  isError: false,\r\n  errorMessage: \"\",\r\n  selectedUser: \"\",\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case usersType.GET_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case usersType.GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: action.payload,\r\n      };\r\n    case usersType.GET_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: [],\r\n        isError: true,\r\n        errorMessage: action.payload,\r\n      };\r\n    case usersType.SET_SELECTED_USER:\r\n      return {\r\n        ...state,\r\n        selectedUser: action.payload,\r\n      };\r\n    case usersType.ADD_USER:\r\n      // Add the new user to users array and sort it by first name\r\n      const usersArrayAfterAdd = [...state.users, action.payload];\r\n      return {\r\n        ...state,\r\n        users: usersArrayAfterAdd.sort((a, b) =>\r\n          a.name.first > b.name.first ? 1 : -1\r\n        ),\r\n      };\r\n    case usersType.UPDATE_USER:\r\n      // Find Index of the edited user object\r\n      const index = state.users.findIndex(\r\n        (user) => user.id.value === action.payload.id\r\n      );\r\n      const usersArrayAfterEdit = [...state.users];\r\n      // Update the user object using index\r\n      usersArrayAfterEdit[index] = action.payload.user;\r\n      // Update the users array and sort it by first name\r\n      return {\r\n        ...state,\r\n        users: usersArrayAfterEdit.sort((a, b) =>\r\n          a.name.first > b.name.first ? 1 : -1\r\n        ),\r\n      };\r\n    case usersType.DELETE_USER:\r\n      // Filter the users array from the deleted one\r\n      const usersArrayAfterDelete = state.users.filter(\r\n        (user) => user.id.value !== action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        users: usersArrayAfterDelete,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport pageReducer from \"./page/reducer\";\r\nimport usersReducer from \"./users/reducer\";\r\n\r\nexport const reducer = combineReducers({\r\n  page: pageReducer,\r\n  users: usersReducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}